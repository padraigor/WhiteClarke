<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.wcg.example</groupId>
	<artifactId>jsexample</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>com.wcg.dojotoolkit</groupId>
			<artifactId>dojo-release-src</artifactId>
			<version>1.7.2.p03</version>
			<classifier>ui</classifier>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<warSourceDirectory>src/main/resources/web</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>ro.isdc.wro4j</groupId>
				<artifactId>wro4j-maven-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>jshint</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<targetGroups>core</targetGroups>
					<minimize>false</minimize>
					<contextFolder>${basedir}/src/main/resources/web/dojo</contextFolder>
					<wroFile>${basedir}/wro.xml</wroFile>
					<ignoreMissingResources>false</ignoreMissingResources>
					<options>devel,evil,noarg,smarttabs,laxbreak,shadow,lastsemic</options>
					<globals>dojo,dojox,dijit,it,expect,require,define</globals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-dependencies</id>
						<phase>validate</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
							<stripVersion>true</stripVersion>
							<excludeGroupIds />
							<artifactItems>
								<artifactItem>
									<groupId>com.wcg.dojotoolkit</groupId>
									<artifactId>dojo-release-src</artifactId>
									<classifier>ui</classifier>
									<includes>**/*</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dojo-release-src-ui-jar</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/web/dojo</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-jasmine-report</id>
						<phase>verify</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/surefire-reports</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/jasmine</directory>
									<includes>
										<include>TEST-jasmine.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>1.1.0</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jsTestSrcDir>${basedir}/src/main/resources/web/dojo/com/wcg/example/jsexample/tests</jsTestSrcDir>
					<specIncludes>
						<include>**/*Test.js</include>
					</specIncludes>
					<jsSrcDir>${project.build.directory}/dojo-release-src-ui-jar</jsSrcDir>
					<sourceIncludes>
						<include>/src/main/resources/web/dojo/com/wcg/quoteportal/mobile/tests/JasmineBootStrap.js</include>
						<include>dojo/dojo.js</include>
					</sourceIncludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.10</version>
				<configuration>
					<stopPort>9966</stopPort>
					<stopKey>foo</stopKey>
					<webAppSourceDirectory>${basedir}/src/main/resources/web</webAppSourceDirectory>
					<webXml>${basedir}/src/main/resources/web/dojo/com/wcg/example/jsexample/tests/jasmine-web.xml</webXml>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.1,)
										</versionRange>
										<goals>
											<goal>
												unpack-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>