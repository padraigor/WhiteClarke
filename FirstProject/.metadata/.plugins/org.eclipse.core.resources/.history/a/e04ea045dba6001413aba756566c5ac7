package org.porourke.carshop.model.hibernate;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.HashSet;

import org.hibernate.mapping.Set;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import org.porourke.carshop.model.MakeInterface;
import org.porourke.carshop.model.ModelInterface;

public class HibernameMakeTest {

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Test
	public void testEmptyConstructor() {
		MakeInterface make = new HibernateMake();
		
		assertEquals(-1,make.getId());
		
		//System.out.println((new ArrayList<ModelInterface>()).getClass().toString());
		//System.out.println(make.getModels().getClass().toString());
		
		assertEquals((new ArrayList<ModelInterface>()).getClass(), make.getModels().getClass());
		assertEquals("",make.getName());
	}
	
	@Test
	public void testConstructorWithoutID() {
		MakeInterface make = new HibernateMake(new HashSet<ModelInterface>(),"TestMake");
		
		assertEquals(-1,make.getId());
		assertEquals((new HashSet<ModelInterface>()).getClass(),  make.getModels().getClass());
		assertEquals("TestMake",make.getName());
	}
	
	@Test
	public void testFullConstructorID() {
		MakeInterface make = new HibernateMake(100,new HashSet<ModelInterface>(),"TestMake");
		
		assertEquals(100,make.getId());
		assertEquals((new HashSet<ModelInterface>()).getClass(),make.getModels().getClass());
		assertEquals("TestMake",make.getName());
	}
	
	@Test
	public void testSetAndGetID() {
		MakeInterface make = new HibernateMake(100,new HashSet<ModelInterface>(),"TestMake");
		make.setId(200);
		
		assertEquals(200,make.getId());
	}
	
	@Test
	public void testSetAndGetNames() {
		MakeInterface make = new HibernateMake(100,new HashSet<ModelInterface>(),"TestMake");
		make.setName("TestName");
		
		assertEquals("TestName",make.getName());
	}
	
	@Test
	public void testAddModel() {
		MakeInterface make = new HibernateMake();
		ModelInterface model = new HibernateModel(null,make,"TestModel");
		
		make.addModel(model);
		
		ModelInterface model2 = make.getModels().toArray(new ModelInterface[make.getModels().size()])[0];
		
		assertEquals(model,model2);
	}
	
	@Test
	public void testSetAndGetModels() {
		MakeInterface make = new HibernateMake(100,new HashSet<ModelInterface>(),"TestMake");
		ModelInterface model = new HibernateModel(null,make,"TestModel");
		ArrayList<ModelInterface> modelList= new ArrayList<ModelInterface>();
		modelList.add(model);
		
		make.setModels(modelList);
		
		
		assertEquals("TestName",make.getName());
	}
	
	
	//Test Constructor with Collection<ModelInteface> not null
	//Test Add Model

	
	
}
