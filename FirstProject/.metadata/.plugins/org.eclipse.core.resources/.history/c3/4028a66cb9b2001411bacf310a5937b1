package org.porourke.carshop.frontend;

import java.util.ArrayList;
import java.util.List;

import org.porourke.carshop.model.VehiclesInterface;
import org.porourke.carshop.model.hibernate.Make;
import org.porourke.carshop.model.hibernate.Model;
import org.porourke.carshop.model.hibernate.Vehicle;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
@Transactional
public class CarsRestController {
	
	VehiclesInterface vehicleInterface;
	@Autowired
	public CarsRestController(VehiclesInterface vehicleInterface) {
		super();
		this.vehicleInterface = vehicleInterface;
//		setupTestingData();
	}	
//	
//	private void setupTestingData() {
//		Make make = new Make();
//		make.setName("Lada");
//		make.setId(1);
//		
//		Model model= new Model();
//		model.setName("BrokenCar");
//		make.addModel(model);
//		model.setId(1);
//		
//		Vehicle vehicle = new Vehicle();	
//		vehicle.setReg("ABC123");
//		vehicle.setModel(model);
//		
//		vehicleInterface.saveVehicle(vehicle);
//	}	
//	
	
	
	@RequestMapping(value="/createCars")
	public void createCars() {
		Make voltsWagen = new Make(null,"Voltswagen");				
		Make ford  		= new Make(null,"Ford");						
		Make toyota  	= new Make(null,"Toyota");					
		Make lada  		= new Make(null,"Lada");						 
		Make BAE  		= new Make(null,"BAE");						
		
		Model passat_B6 = new Model(null,voltsWagen,"Passat B6"); 	
		Model golf 		= new Model(null,voltsWagen,"Golf"); 		
		Model polo 		= new Model(null,voltsWagen,"Polo"); 		
		Model fiesta_ST = new Model(null,ford,		"Fiesta_ST"); 	
		Model focus 	= new Model(null,ford,		"Focus"); 		
		Model mustang 	= new Model(null,ford,		"Mustang"); 	
		Model hilux 	= new Model(null,toyota,	"Hilux"); 		
		Model prius 	= new Model(null,toyota,	"Prius"); 		
		Model landCrusier= new Model(null,toyota,	"LandCruiser");	
		Model yarris	= new Model(null,toyota,	"Yarris"); 		
		Model pria 		= new Model(null,lada,		"Pria"); 		
		Model tank 		= new Model(null,BAE,		"Tank"); 		
		
		saveVehicle(new Vehicle());
		System.out.println("Here X");
		
		
		saveVehicle(new Vehicle("ABC123", passat_B6	, "Black", 	2014, 2104)); 			
		saveVehicle(new Vehicle("ABD123", passat_B6	, "Red", 	2013, 2104));	
		saveVehicle(new Vehicle("ABE123", passat_B6	, "White", 	2012, 2104));	
		saveVehicle(new Vehicle("ABF123", passat_B6	, "Black", 	2011, 2104));	
		saveVehicle(new Vehicle("ABG123", passat_B6	, "Blue", 	2014, 2104));	
		saveVehicle(new Vehicle("ABH123", golf	   	, "Black", 	2013, 1605));	
		saveVehicle(new Vehicle("ABI123", golf		, "Red", 	2012, 1605));		
		saveVehicle(new Vehicle("ABJ123", golf		, "Black", 	2011, 1605));	
		saveVehicle(new Vehicle("ABK123", polo		, "Black", 	2010, 995));	
		saveVehicle(new Vehicle("ABL123", polo		, "Red", 	2014, 995));	
		saveVehicle(new Vehicle("ABM123", fiesta_ST	, "Black", 	2013, 1005));		
		saveVehicle(new Vehicle("ABN123", fiesta_ST	, "Black", 	2012, 998));			
		saveVehicle(new Vehicle("ABO123", fiesta_ST	, "Red", 	2011, 998));			
		saveVehicle(new Vehicle("ABP123", fiesta_ST	, "White", 	2014, 998));			
		saveVehicle(new Vehicle("ABQ123", focus		, "White", 	2013, 1605));			
		saveVehicle(new Vehicle("ABR123", focus		, "White", 	2012, 1605));			
		saveVehicle(new Vehicle("ABS123", focus		, "Black", 	2011, 1605));			
		saveVehicle(new Vehicle("ABT123", mustang	, "Red", 	2014, 2300));			
		saveVehicle(new Vehicle("ABU123", mustang	, "Red", 	2013, 2300));			
		saveVehicle(new Vehicle("ABV123", mustang	, "Black", 	2013, 2300));			
		saveVehicle(new Vehicle("ABW123", hilux		, "Black", 	2012, 2200));			
		saveVehicle(new Vehicle("ABX123", hilux		, "White", 	2012, 2200));			
		saveVehicle(new Vehicle("ABY123", hilux		, "White", 	2011, 2400));		
		saveVehicle(new Vehicle("ABZ123", prius		, "Red", 	2014, 1800));			
		saveVehicle(new Vehicle("ABC124", prius		, "Red", 	2014, 1800));		
		saveVehicle(new Vehicle("ABC125", prius		, "Black", 	2013, 1600));			
		saveVehicle(new Vehicle("ABC126", landCrusier,"Black", 	2013, 2300));	
		saveVehicle(new Vehicle("ABC127", yarris 	, "White", 	2012, 1005));	
		saveVehicle(new Vehicle("ABC128", yarris 	, "Red", 	2012, 1005));		
		saveVehicle(new Vehicle("ABC129", yarris 	, "Black", 	2011, 1005));	
		saveVehicle(new Vehicle("ABC130", pria		, "Black", 	1975, 1500));				
		saveVehicle(new Vehicle("ABC133", tank		, "Green", 	2013, 60000));			
	}
	
	private void saveVehicle(Vehicle vehicle) {
		vehicleInterface.saveVehicle(vehicle);
	}
	
	@RequestMapping(value="/availableCarsJson", produces = "application/json;charset=UTF-8")
	@ResponseBody
	public AvailableCarsResponse availbleCarsJson(
			@RequestParam(value = "selectedMakeId",  required = false, defaultValue = "1") String makeSelectedId,
			@RequestParam(value = "selectedModelId", required = false, defaultValue = "1") String modelSelectedId){
 
		AvailableCarsResponse response = new AvailableCarsResponse();
		
		
		//List of Makes
		response.setMakes(new ArrayList<Make>(vehicleInterface.getMakes()));
		response.setMakeSelectedId(makeSelectedId);
		
		//List of Models
		int makeSelectedIdAsInt = Integer.parseInt(makeSelectedId); 
//		List<Model> modelsList = new ArrayList<Model>(vehicleInterface.getMakeById(makeSelectedIdAsInt).getModels());  
//		response.setModels(modelsList);
		response.setModelSelectedId(modelSelectedId);
	
		//List of Vehicles
		int modelSelectedIdAsInt = Integer.parseInt(modelSelectedId);
		List<Vehicle> vehicleList;
//		if(modelSelectedIdAsInt>0){
//			vehicleList = new ArrayList<Vehicle>(vehicleInterface.getModelById(modelSelectedIdAsInt).getVehicles());
//		}
//		else
//		{	
//			vehicleList = new ArrayList<Vehicle>(modelsList.get(0).getVehicles());
//		}
		response.setVehicles(new ArrayList<Vehicle>());
		
		return response;
	}	
}
